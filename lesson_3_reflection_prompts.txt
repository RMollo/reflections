When would you want to use a remote repository rather than keeping all your work
local?

     A perfect answer to this, is what we just did in the exercise. I pushed my reflections files to a remote repository on Github. Using a remotre repository is useful when trying to share a project that you may be working on with other people, without having to hand them your computer- you can just give the link, and they can access/view/pull/modify your project collaboratively with you.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If you're wokring on a new project feature offline on Git, when you return online, a team member may have made a change on the online experimental branch of your project on Github that could conflcit with or cause problems with interacting with your offline experimental branch.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork is a GitHub invention. It has zero standing outside of GitHub. Clones are direct copies of a repository, be it online or offline, yours or someone else's. Branches can be made in an existing repository of your own. They allow you to experiment with giving your project new features without the risk of severely breaking anything.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having an offline copy of the last known state of a remote, means you can still work on a remote without internet access. When you are able to access the internet later, you can push your changes to the online copy.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

   With a little more practice, I would feel comofortbale collaborating with GitHub. While in all honesty, I would prefer sitting next to someone and verbally discussing conflicts, and not have to constantly push and commit, I see the appeal of GitHub. It is incredibly useful, for groups that do not always have time to meet in person, and allows online collaboration and updates via email. I can forsee myself using GitHub for this class in the future, as it is usually difficult to meet up with my group members because our schedules are not similar.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    While it is possible to make changes directly in a project's master, if a change is made that causes problems, it effects the entire project. Branches, however, allow you to make changes and be bold with experimentation, without the fear of damaging something. Branches do have their drawbacks though. It can be difficult to constantly remember to merge a branch with the master when you're satisfied with the branch.
